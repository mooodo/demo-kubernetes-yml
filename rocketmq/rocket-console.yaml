kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: rocket-console
  name: rocket-console
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rocket-console
  template:
    metadata:
      name: rocket-console
      labels:
        app: rocket-console
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                      - rocket-console
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: console
        image: styletang/rocketmq-console-ng
        imagePullPolicy: Always
        env:
          - name: JAVA_OPTS
            value: "-Drocketmq.namesrv.addr=rocket-namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"

---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: rocket-console
  name: rocket-console
  namespace: default
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: rocket-console
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-rocket
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: rocket
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rocket-console
                port:
                  number: 8080
